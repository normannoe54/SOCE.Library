<Application x:Class="SOCE.Library.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SOCE.Library.UI"
             xmlns:views="clr-namespace:SOCE.Library.UI.Views"       
             xmlns:viewmodels="clr-namespace:SOCE.Library.UI.ViewModels"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"         
             StartupUri="Views/Shell/ShellView.xaml">
    <Application.Resources>
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DialogHost.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Red.xaml" />-->
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="#e38a8a"/>
            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="Black"/>
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#5c5c5c"/>
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="White"/>
            <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="#4f1d1b"/>
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="DarkGray"/>
            
            
            <local:DatetoStringConverter x:Key="DatetoString"/>
            <local:DatetoStringPartialConverter x:Key="DateToStringPartial"/>

            <!--<local:InvertBooleanConverter x:Key="InvertBooleanConverter"/>
            <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <local:InverseBoolToVisConverter x:Key="InverseBoolToVisConverter"/>-->
            
            <!--<SolidColorBrush x:Key="SOCERed" Color="#9d3434"/>
            <SolidColorBrush x:Key="SOCELighterRed" Color="#e38a8a"/>
            <SolidColorBrush x:Key="SOCELightRed" Color="#e36d6d"/>-->

            <!--<DataTemplate DataType="{x:Type viewmodels:EmployeeDataVM}">
                <views:EmployeeDataView/>
            </DataTemplate>-->
            
            <DataTemplate DataType="{x:Type viewmodels:EmployeeVM}">
                <views:EmployeeView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:NetworkSearchVM}">
                <views:NetworkSearchView/>
            </DataTemplate>

            <!--<DataTemplate DataType="{x:Type viewmodels:HomeViewVM}">
                <views:HomeView/>
            </DataTemplate>-->
            
            <!--<DataTemplate DataType="{x:Type viewmodels:LicenseManagerVM}">
                <views:LicenseManagerView/>
            
            </DataTemplate>-->
            <!--<DataTemplate DataType="{x:Type viewmodels:ResourcesVM}">
                <views:ResourcesView/>
            
            </DataTemplate>-->
            <DataTemplate DataType="{x:Type viewmodels:TimesheetVM}">
                <views:TimesheetView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:ProposalsVM}">
                <views:ProposalsView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:InvoicingVM}">
                <views:InvoicingView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:PMScheduleVM}">
            <views:PMReportView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:ScheduleWeekVM}">
                <views:ScheduleWeekView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:WeeklyScheduleVM}">
                <views:WeeklyScheduleView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:ProjectScheduleVM}">
                <views:ProjectScheduleView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:TimesheetReviewVM}">
                <views:TimesheetReviewView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:PortalAI}">
                <views:ShellPortalView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type viewmodels:LoginAI}">
                <views:ShellLoginView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:LoginVM}">
                <views:LoginView/>
            </DataTemplate>
            
            <!--<DataTemplate DataType="{x:Type viewmodels:SignupVM}">
                <views:SignupView/>
            </DataTemplate>-->
            
            <DataTemplate DataType="{x:Type viewmodels:ForgotPasswordVM}">
                <views:ForgotPasswordView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type viewmodels:CodeInsertVM}">
                <views:CodeInsertView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type viewmodels:ProjectVM}">
                <views:ProjectView/>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type viewmodels:ResetPasswordVM}">
                <views:ResetPasswordView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:ProjectListVM}">
                <views:ProjectListView/>
            </DataTemplate>

            <SolidColorBrush x:Key="SOCERed" Color="#c92127"/>
            <SolidColorBrush x:Key="SOCEGray" Color="#636466"/>
            <!--<SolidColorBrush x:Key="SOCELighterRed" Color="#e38a8a"/>-->
            <SolidColorBrush x:Key="SOCELightRed" Color="#e24d52"/>
            <SolidColorBrush x:Key="SOCELightGray" Color="#898b8d"/>
            <SolidColorBrush x:Key="SOCETransparentGray" Color="#898B8D"/>

            <SolidColorBrush x:Key="SOCEBlueCompliment" Color="#147975"/>
            <SolidColorBrush x:Key="SOCEGreenCompliment" Color="#1d9719"/>
            <SolidColorBrush x:Key="SOCEOrangeCompliment" Color="#c97221"/>
            <SolidColorBrush x:Key="SOCELightGreenCompliment" Color="#1d9719"/>
            
            <Style x:Key="PageHeader" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource SOCERed}" />
                <Setter Property="FontSize" Value="32"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <Color x:Key="FilledColor" A="255" B="155" R="155" G="155"/>
            <Color x:Key="UnfilledColor" A="0" B="155" R="155" G="155"/>

            
            <Style x:Key="BusyAnimationStyle" TargetType="Control">
                <Setter Property="Background" Value="#7F000000"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Animation0" BeginTime="00:00:00.0" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse0" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation1" BeginTime="00:00:00.2" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation2" BeginTime="00:00:00.4" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse2" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation3" BeginTime="00:00:00.6" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse3" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation4" BeginTime="00:00:00.8" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse4" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation5" BeginTime="00:00:01.0" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse5" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation6" BeginTime="00:00:01.2" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse6" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>

                                <Storyboard x:Key="Animation7" BeginTime="00:00:01.4" RepeatBehavior="Forever">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="ellipse7" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                        <SplineColorKeyFrame KeyTime="00:00:00.0" Value="{StaticResource FilledColor}"/>
                                        <SplineColorKeyFrame KeyTime="00:00:01.6" Value="{StaticResource UnfilledColor}"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsVisible" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Animation0}" x:Name="Storyboard0" />
                                        <BeginStoryboard Storyboard="{StaticResource Animation1}" x:Name="Storyboard1"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation2}" x:Name="Storyboard2"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation3}" x:Name="Storyboard3"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation4}" x:Name="Storyboard4"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation5}" x:Name="Storyboard5"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation6}" x:Name="Storyboard6"/>
                                        <BeginStoryboard Storyboard="{StaticResource Animation7}" x:Name="Storyboard7"/>
                                    </Trigger.EnterActions>

                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="Storyboard0"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard1"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard2"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard3"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard4"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard5"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard6"/>
                                        <StopStoryboard BeginStoryboardName="Storyboard7"/>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>

                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Canvas Height="60" Width="60">
                                        <Canvas.Resources>
                                            <Style TargetType="Ellipse">
                                                <Setter Property="Width" Value="15"/>
                                                <Setter Property="Height" Value="15" />
                                                <Setter Property="Fill" Value="#009B9B9B" />
                                            </Style>
                                        </Canvas.Resources>

                                        <Ellipse x:Name="ellipse0" Canvas.Left="1.75" Canvas.Top="21"/>
                                        <Ellipse x:Name="ellipse1" Canvas.Top="7" Canvas.Left="6.5"/>
                                        <Ellipse x:Name="ellipse2" Canvas.Left="20.5" Canvas.Top="0.75"/>
                                        <Ellipse x:Name="ellipse3" Canvas.Left="34.75" Canvas.Top="6.75"/>
                                        <Ellipse x:Name="ellipse4" Canvas.Left="40.5" Canvas.Top="20.75" />
                                        <Ellipse x:Name="ellipse5" Canvas.Left="34.75" Canvas.Top="34.5"/>
                                        <Ellipse x:Name="ellipse6" Canvas.Left="20.75" Canvas.Top="39.75"/>
                                        <Ellipse x:Name="ellipse7" Canvas.Top="34.25" Canvas.Left="7" />
                                        <Ellipse Width="39.5" Height="39.5" Canvas.Left="8.75" Canvas.Top="8" Visibility="Hidden"/>
                                    </Canvas>
                                    <Label Content="{Binding Path=Text}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--<Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="15 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <Style x:Key="NonUnderLineTextBox" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Hidden" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Regular" />
            </Style>
            
            <Style x:Key="menuTitle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Margin" Value="40 30 0 15" />
            </Style>

            <Style x:Key="menuButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Height" Value="45" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="15 0 15 5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="10">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F7F6F4" />
                        <Setter Property="Foreground" Value="{StaticResource SOCERed}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="IconButton" TargetType="materialDesign:PackIcon">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
                <Setter Property="Margin" Value="25 0 0 0"/>
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="18"/>
            </Style>
            
            <Style x:Key="menuButtonIcon" TargetType="materialDesign:PackIcon">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
                <Setter Property="Margin" Value="25 0 0 0"/>
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="18"/>
            </Style>

            <Style x:Key="menuButtonText" TargetType="TextBlock" >
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Margin" Value="20 0 0 2"/>
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}" x:Key="DefaultButton">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource SOCETransparentGray}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="StarCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MaterialDesignCheckBox}">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid>
                                <materialDesign:PackIcon Kind="Star" x:Name="star" Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                <materialDesign:PackIcon Kind="StarBorder" Width="18" Height="18" Foreground="Black" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="star" Property="Foreground" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="star" Property="Foreground" Value="orange"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Transparent"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="False">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="10"/>
                    </Trigger>
                </Style.Triggers>-->
                <!--<Setter Property="materialDesign:ToggleButtonAssist.OnContent">
                    <Setter.Value>
                        <materialDesign:PackIcon Kind="Circle" FlowDirection="LeftToRight" />
                    </Setter.Value>
                </Setter>-->
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
