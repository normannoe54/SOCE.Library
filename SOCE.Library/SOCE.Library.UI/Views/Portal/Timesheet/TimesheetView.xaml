<UserControl x:Class="SOCE.Library.UI.Views.TimesheetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SOCE.Library.UI"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:component="clr-namespace:SOCE.Library.UI.Components"
             xmlns:ie="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <Grid Grid.Column="1" Margin="30 10 40 20">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <!--Page Title-->
        <!--<TextBlock Text="Time Sheet" Grid.Row="0" FontSize="32" FontWeight="SemiBold" Foreground="{StaticResource SOCERed}" HorizontalAlignment="Left"/>-->
        <StackPanel Grid.Row="0" HorizontalAlignment="Left" Orientation="Horizontal">
            <TextBlock  Text="Time Sheet"  Style="{StaticResource PageHeader}" />
            <!--<materialDesign:PackIcon Margin="10 0 0 0" Kind="InformationCircleOutline" Width="20" Height="20" Foreground="{StaticResource SOCERed}" 
                                     ToolTip="Any items highlighted in red are &#10; inactive and are subject for review."/>-->
        </StackPanel>
        
        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="{Binding MessageVisible, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <ProgressBar Value="75" Style="{StaticResource MaterialDesignCircularProgressBar}" IsIndeterminate="True" Foreground="{StaticResource SOCEBlueCompliment}"/>
            <TextBlock Grid.Row="0" FontSize="22" FontWeight="SemiBold" Foreground="{StaticResource SOCEBlueCompliment}"  VerticalAlignment="Bottom" TextAlignment="Center" HorizontalAlignment="Center" Text="Saving..."/>
        </StackPanel>
        <TextBlock Grid.Row="0" FontSize="22" FontWeight="SemiBold" Foreground="{StaticResource SOCEBlueCompliment}"  VerticalAlignment="bottom" TextAlignment="Center" HorizontalAlignment="Center" Text="{Binding Message}" 
                   Visibility="{Binding MessageVisible, Converter={StaticResource InverseBoolToVisConverter}, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}">
            <TextBlock.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </TextBlock.Triggers>
        </TextBlock>

        <!--<TextBlock Grid.Row="1" FontSize="16" FontWeight="SemiBold" Foreground="{StaticResource SOCERed}"  VerticalAlignment="Bottom" TextAlignment="Center" HorizontalAlignment="Center"
                       Text="Any rows highlighted in red are inactive projects or phases and are subject for review. "/>-->


        <!--<TextBlock Grid.Row="0" FontSize="24" FontWeight="DemiBold" Foreground="{StaticResource SOCERed}"  VerticalAlignment="bottom" TextAlignment="Center" HorizontalAlignment="Center" Text="{Binding Message, NotifyOnTargetUpdated=True}">
            <TextBlock.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </TextBlock.Triggers>
        </TextBlock>-->
        <!--Seprator-->
        <!--<Separator Height="1" Grid.Row="1" Background="{StaticResource SOCEGray}" Margin="0 -1 0 10"/>-->

        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Grid.Row="2">
            <Button Style="{StaticResource MaterialDesignFlatButton}" Padding="0 0 0 0" Command="{Binding PreviousCommand}"
                    IsHitTestVisible="{Binding ButtonInAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="ArrowLeft" VerticalAlignment="Center"  Foreground="Black"/>
                    <Label VerticalAlignment="Center" HorizontalAlignment ="Left" Content="Previous"  Foreground="Black"/>
                </StackPanel>
            </Button>
            <Button Margin="20 0 20 0" Style="{StaticResource MaterialDesignFlatButton}" Padding="0 0 0 0" Command="{Binding CurrentCommand}"
                    IsHitTestVisible="{Binding ButtonInAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal">
                    <Label VerticalAlignment="Center" HorizontalAlignment ="Left" Content="Current" Margin="0 0 10 0"  Foreground="Black"/>
                    <materialDesign:PackIcon Kind="Calendar" VerticalAlignment="Center" Foreground="Black"/>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MaterialDesignFlatButton}" Padding="0 0 0 0" Command="{Binding NextCommand}"
                    IsHitTestVisible="{Binding ButtonInAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal">
                    <Label VerticalAlignment="Center" HorizontalAlignment ="Left" Content="Next" Foreground="Black"/>
                    <materialDesign:PackIcon Kind="ArrowRight" VerticalAlignment="Center" Foreground="Black"/>
                </StackPanel>
            </Button>
        </StackPanel>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="380"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!--Counter Title-->
            <Grid Grid.Column="0" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <TextBlock Text="{Binding MonthYearString}" FontSize="18" FontWeight="SemiBold"/>
                        <TextBlock Margin="10 0 0 0" Text="{Binding DateString}" Grid.Row="2" FontSize="18" FontWeight="Regular"/>
                        <materialDesign:PackIcon Margin="5 0 0 0" Kind="{Binding Icon}" Foreground="{Binding Iconcolor}" VerticalAlignment="Center"/>
                        <!--<ToggleButton Style="{StaticResource MaterialDesignActionToggleButton}" Height="20" Width="20" Background="Transparent" Foreground="Black" IsChecked="{Binding SearchFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ToggleButton.Content>
                                <materialDesign:PackIcon Background="Transparent" ToolTip="Filter by Number" Kind="Pound" VerticalAlignment="Center" HorizontalAlignment="Center" Height="15" Width="15"/>
                            </ToggleButton.Content>
                            <materialDesign:ToggleButtonAssist.OnContent>
                                <materialDesign:PackIcon Background="Transparent" ToolTip="Filter by Name" Kind="AlphaN" VerticalAlignment="Center" HorizontalAlignment="Center"  Height="25" Width="25" Padding="0"/>
                            </materialDesign:ToggleButtonAssist.OnContent>
                        </ToggleButton>-->
                    </StackPanel>

                    <!--<Border Grid.Column="1" Width="110" CornerRadius="3" BorderThickness="1" BorderBrush="Black" Margin="20 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Right" Padding="2">-->
                    <StackPanel Grid.Column="1" Orientation="Horizontal" Width="110" Margin="20 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Right">
                            <TextBlock Text="Due in:" FontSize="14" FontWeight="Regular" FontStyle="Italic"/>
                            <TextBlock Text="{Binding DueDateValue}" FontSize="14" FontWeight="SemiBold" Margin="7 0 0 0"/>
                            <TextBlock Text=" days" FontSize="14" FontWeight="Regular" FontStyle="Italic"/>
                        </StackPanel>
                    <!--</Border>-->
                </Grid>


                <StackPanel Grid.Row="1" Orientation="Vertical"  VerticalAlignment="Bottom" Margin="0 10 0 0">
                    <Grid>
                        <ProgressBar Height="15" Orientation="Horizontal" Value="{Binding PercentComplete}" Background="Transparent" Foreground="{StaticResource SOCELightGray}" BorderThickness="1" BorderBrush="{StaticResource SOCELightGray}"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Percent Complete: " FontSize="10" FontWeight="SemiBold"/>
                            <TextBlock Text="{Binding PercentComplete, StringFormat=' {0}%'}" FontSize="10" FontWeight="SemiBold"/>
                        </StackPanel>
                    </Grid>
                    <Grid>
                        <ProgressBar Height="15" Orientation="Horizontal" Value="{Binding ExpectedProgress}"  Background="Transparent" Foreground="{StaticResource SOCELightRed}" BorderThickness="1" BorderBrush="{StaticResource SOCELightGray}"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Expected Progress:" FontSize="10" FontWeight="SemiBold"/>
                            <TextBlock Text="{Binding ExpectedProgress, StringFormat=' {0}%'}" FontSize="10" FontWeight="SemiBold" materialDesign:TextFieldAssist.SuffixText="%"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </Grid >
            <Button Grid.Column="1" Style="{StaticResource MaterialDesignFlatButton}" Height="65" HorizontalAlignment="Left" VerticalAlignment="Stretch" Padding="5"
                    Margin="10 0 0 0" ToolTip="Expense Report" Command="{Binding OpenExpenseReport}"
                    IsHitTestVisible="{Binding ButtonInAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <Button.Content>
                    <materialDesign:PackIcon Width="40" Height="117" Foreground="{Binding ExpensePresent}" Kind="TextBoxPlus" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    <!--<StackPanel Orientation="Horizontal">
                        <TextBlock Text="EXPENSE&#10; REPORT" Foreground="black" VerticalAlignment="Center"/>
                    </StackPanel>-->
                </Button.Content>
            </Button>

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Button Grid.Row="0" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black" Command="{Binding ExportToExcel}" 
                        HorizontalAlignment="Right" VerticalAlignment="Center"  Height="30" Margin="5 0 5 0" BorderBrush="Black" BorderThickness="1"
                        IsHitTestVisible="{Binding ButtonInAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Export" Foreground="black" VerticalAlignment="Center"/>

                        <materialDesign:PackIcon Margin="5 0 0 0" Kind="Download" VerticalAlignment="Center"  Width="20" Height="20" ToolTip="Export Current" Foreground="Black"/>
                    </StackPanel>
                </Button>
                <TextBlock Grid.Row="1"  Text="{Binding BaseHours, StringFormat= 'Base Hours {0} hrs.'}" FontSize="16" Margin="0 0 20 0" FontWeight="SemiBold" Foreground="Black" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
            </Grid>
        </Grid>
        <!--<ScrollViewer >-->
        <Grid Grid.Row="3" Margin="0 5 0 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>


            <Grid Background="Transparent" Grid.Row="0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="430"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="60"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" IsEnabled="{Binding IsSubEditable}" Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding AddRowCommand}" 
                        Background="Transparent" Foreground="{StaticResource SOCEGreenCompliment}" HorizontalAlignment="Left"
                        IsHitTestVisible="{Binding ButtonInAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0 0 8 0" Width="11" Height="11"/>
                        <TextBlock Text="Add Project" FontWeight="SemiBold"/>
                    </StackPanel>
                </Button>

                <ItemsControl Grid.Column="1" ItemsSource="{Binding DateSummary}" HorizontalAlignment="Stretch" Height="40">
                    <ItemsControl.Resources>
                        <local:DatetoStringConverter x:Key="DatetoString"/>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Value, Converter={StaticResource DatetoString}}"
                                               TextAlignment="Center"
                                               VerticalAlignment="Center" 
                                               FontWeight="SemiBold" 
                                               Foreground="Black">
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="1"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>

                <TextBlock Grid.Column="2"
                             Text="Total" 
                             TextAlignment="Center"
                             VerticalAlignment="Center" 
                             HorizontalAlignment="Stretch" 
                             FontSize="14" FontWeight="SemiBold" 
                             Foreground="Black"/>

            </Grid>


            <Grid Background="Transparent"  Grid.Row="1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="430"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="60"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                               Text="Total:" 
                               Padding="10"
                               TextAlignment="Left"
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Stretch" 
                               FontSize="14" FontWeight="SemiBold" 
                               Foreground="Gray" />

                <ItemsControl Grid.Column="1"  ItemsSource="{Binding TotalHeader}" HorizontalAlignment="Stretch" Height="40" >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Value}" 
                                               materialDesign:TextFieldAssist.SuffixText=" h"
                                               TextAlignment="Center"
                                               VerticalAlignment="Center" 
                                               FontWeight="SemiBold" 
                                               Foreground="Gray">
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="1"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>

                <TextBlock Grid.Column="2"
                               Text="{Binding Total}" 
                               materialDesign:TextFieldAssist.SuffixText=" h"
                               TextAlignment="Center"
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Stretch" 
                               FontSize="14" FontWeight="SemiBold" 
                               Foreground="Gray" />

            </Grid>

            <!-- Bind Rows using the default StackPanel for the ItemsPanel -->
            <!--<ScrollViewer Grid.Row="2">-->
            <ListView   Grid.Row="2" Margin="0 0 -20 0"
                    Background="Transparent" 
                        x:Name="listview"
                          SelectionMode="Single"             
                          ItemsSource="{Binding Rowdata, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding SelectedRow,UpdateSourceTrigger=PropertyChanged}">
                <ListView.Resources>
                    <local:CustomBoolToVisibilityConverter x:Key="BoolToVis" TrueValue="Visible" FalseValue="Hidden"/>
                    <local:TableColorConverter x:Key="valueconverter"/>
                    <local:IsNullColorConverter x:Key="IsNullColorConverter"/>
                    <local:TimesheetColorAlertConverter x:Key="TimesheetColorAlertConverter"/>
                </ListView.Resources>

                <ListView.Template>
                    <ControlTemplate>
                        <ScrollViewer CanContentScroll="True" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="Visible" Focusable="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </ControlTemplate>
                </ListView.Template>

                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="IsEnabled" Value="{Binding Path=DataContext.IsSubEditable, RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <ContentPresenter/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <!-- Set the Template for each row to a TextBlock and another ItemsControl -->
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="430"/>
                                <!--<ColumnDefinition Width="70"/>-->
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="60"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="80"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Grid.Column="0" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFlatButton}" Padding="0" 
                                            Command="{Binding Path=DataContext.RemoveRowCommand, RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" CommandParameter="{Binding}" ToolTip="Remove">
                                        <Button.Content>
                                            <materialDesign:PackIcon Foreground="{StaticResource SOCERed}" Kind="Minus" VerticalAlignment="Center" Height="10" Width="20"/>
                                        </Button.Content>
                                    </Button>
                                    <local:MyCustomComboBox Grid.Column="1" x:Name="combo" 
                                                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                                            Foreground="Black" BorderThickness="0 0 0 1"
                                                            Background="{Binding AlertStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TimesheetColorAlertConverter}}"
                                                            VerticalContentAlignment="Center"
                                                            SelectedItem="{Binding Path=Project, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            ItemsSource="{Binding Path=ProjectList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            MaxDropDownHeight="255"  
                                                            ToolTip="Select Project"
                                                            BorderBrush="{Binding Path=Project, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource IsNullColorConverter}}"
                                                            IsEditable="{Binding IsThisEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                            IsDropDownOpen="{Binding ComboOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            StaysOpenOnEdit="True"      
                                                            IsTextSearchEnabled="False"
                                                            TextSearch.TextPath="CombinedName">
                                        <ie:Interaction.Triggers>
                                            <ie:EventTrigger EventName="KeyUp">
                                                <ie:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"  CommandParameter="{Binding ElementName=combo, Path=Text}"/>
                                            </ie:EventTrigger>
                                        </ie:Interaction.Triggers>
                                        <ComboBox.Resources>
                                            <Style TargetType="{x:Type materialDesign:SmartHint}">
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="Foreground" Value="{StaticResource SOCERed}"/>
                                                <Setter Property="Opacity" Value="1"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="14"/>
                                            </Style>
                                        </ComboBox.Resources>
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}"  BasedOn="{StaticResource MaterialDesignDataGridComboBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEditable" Value="True">
                                                        <Setter Property="materialDesign:HintAssist.Hint" Value="Select Project" />
                                                        <!--<Setter Property="ToolTip" Value="Select Project" />-->
                                                    </Trigger>
                                                    <Trigger Property="IsEditable" Value="False">
                                                        <Setter Property="materialDesign:HintAssist.Hint" Value="" />
                                                        <!--<Setter Property="ToolTip" Value="" />-->
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate DataType="ProjectLowResModel">
                                                <VirtualizingStackPanel Orientation="Horizontal" Width="290">
                                                    <TextBlock Text="{Binding ProjectNumber, StringFormat=[{0}]}" TextBlock.TextAlignment="Left" FontSize="14" FontWeight="Regular" Margin="5 0 0 0" />
                                                    <TextBlock Text="{Binding ProjectName}" TextBlock.TextAlignment="Left" FontSize="14" FontWeight="DemiBold" Margin="5 0 5 0" />
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </local:MyCustomComboBox>

                                    <Button Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignFlatButton}" Padding="0" 
                                            Command="{Binding ClearSelectedProjectCommand}" 
                                            Visibility="{Binding IsThisEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBoolToVisConverter}}" ToolTip="Remove" Margin="0 0 20 0">
                                        <Button.Content>
                                            <materialDesign:PackIcon Foreground="{StaticResource SOCEGray}" Kind="CancelCircle" VerticalAlignment="Center" Height="15" Width="15"/>
                                        </Button.Content>
                                    </Button>
                                    <!--<ComboBox Grid.Column="1"
                                                  Margin="0 0 0 0"
                                                  VerticalAlignment="Stretch"
                                                  HorizontalAlignment="Stretch"
                                                  Foreground="Black"
                                                  BorderThickness="0 0 0 1"
                                                  BorderBrush="{StaticResource SOCELightGray}"
                                                  ToolTip="Select Project"
                                                  VerticalContentAlignment="Center"
                                                  IsTextSearchEnabled="True" IsEditable="False" 
                                                  StaysOpenOnEdit="True"
                                                  SelectedItem="{Binding Path=Project, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl},Path=DataContext.ProjectList}"
                                                  TextSearch.TextPath="SearchText"
                                                  MaxDropDownHeight="255">
                                        <ComboBox.Resources>
                                            <Style TargetType="{x:Type materialDesign:SmartHint}">
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="Foreground" Value="{StaticResource SOCERed}"/>
                                                <Setter Property="Opacity" Value="1"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="FontSize" Value="14"/>
                                            </Style>
                                        </ComboBox.Resources>
                                        <ComboBox.Style>
                                            <Style TargetType="{x:Type ComboBox}"  BasedOn="{StaticResource MaterialDesignDataGridComboBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="True">
                                                        <Setter Property="materialDesign:HintAssist.Hint" Value="   Select Project" />
                                                        <Setter Property="ToolTip" Value="Select Project" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="materialDesign:HintAssist.Hint" Value="" />
                                                        <Setter Property="ToolTip" Value="" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="ComboBoxItem">
                                                <Setter Property="Margin" Value="0 5 0 5"/>
                                                <EventSetter Event="RequestBringIntoView" Handler="ComboBox_RequestBringIntoView"/>
                                                <EventSetter Event="KeyDown" Handler="ComboBox_KeyDown"/>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate DataType="ProjectModel">
                                                <VirtualizingStackPanel Orientation="Horizontal" Width="300">
                                                    <TextBlock Text="{Binding ProjectNumber, StringFormat=[{0}]}" TextBlock.TextAlignment="Left" FontSize="14" FontWeight="Regular" Margin="5 0 0 0" />
                                                    <TextBlock Text="{Binding ProjectName}" TextBlock.TextAlignment="Left" FontSize="14" FontWeight="DemiBold" Margin="5 0 5 0" />
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>-->
                                </Grid>
                                <Grid Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                    Background="{Binding AlertStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TimesheetColorAlertConverter}}">
                                    <ComboBox Margin="10 0 5 0"
                                                  VerticalAlignment="Stretch"
                                                  VerticalContentAlignment="Center"
                                                  HorizontalAlignment="Stretch"
                                                  Foreground="Black"
                                                  BorderThickness="0 0 0 1"
                                                  ToolTip="Select Phase"
                                                  IsEnabled="{Binding Path=ProjectSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  BorderBrush="{StaticResource SOCELightGray}"
                                                  Style="{StaticResource MaterialDesignDataGridComboBox}"
                                                  IsTextSearchEnabled="True"
                                                  SelectedItem="{Binding Path= SelectedSubproject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  ItemsSource="{Binding Path=SubProjects, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  TextSearch.TextPath="Description"
                                                  MaxDropDownHeight="250">
                                        <!--<ComboBox.IsEnabled>
                                        <MultiBinding Converter="{StaticResource BooleanAllConverter}">
                                            <Binding Path="ProjectSelected" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="DataContext.IsSubEditable" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
                                        </MultiBinding>
                                    </ComboBox.IsEnabled>-->
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate DataType="SubProjectModel">
                                                <VirtualizingStackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                                    <TextBlock Text="{Binding PointNumStr}" TextBlock.TextAlignment="Center" FontSize="14" FontWeight="Regular" ToolTip="{Binding Description}"/>
                                                    <materialDesign:PackIcon Kind="Star" VerticalAlignment="Center" Margin="5 0 0 0" Width="10" Height="10" Foreground="Black"
                                                                 ToolTip="Current Phase" Visibility="{Binding IsScheduleActive, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                </VirtualizingStackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                    </ComboBox>
                                </Grid>


                            </Grid>

                            <ItemsControl ItemsSource="{Binding Entries}" HorizontalAlignment="Stretch" Grid.Column="1">
                                <!--<ItemsControl.Template>
                                    <ControlTemplate>
                                        <ScrollViewer CanContentScroll="True" Padding="{TemplateBinding Padding}" >
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ItemsControl.Template>

                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>-->

                                <!--<ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        --><!--<WrapPanel Orientation="Horizontal"/>--><!--
                                        <UniformGrid Rows="1"/>
                                        --><!--<StackPanel Orientation="Horizontal"/>--><!--
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>-->

                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                       
                                        <!--<WrapPanel Orientation="Horizontal"/>-->
                                        <UniformGrid Rows="1"/>
                                        <!--<StackPanel Orientation="Horizontal"/>-->
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <local:TimesheetTextBox
                                            Text="{Binding TimeEntry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    TextAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    local:SelectTextOnFocus.Active = "True"
                                                    FontWeight="SemiBold" 
                                                    IsReadOnly="{Binding Path = ReadOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    MaxLength="4"
                                                    Background="{Binding CellColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    Foreground="{Binding TimeEntry, Converter={StaticResource valueconverter},  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <TextBox.Style >
                                                <Style TargetType="TextBox">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="Transparent" />
                                                            <Setter Property="BorderBrush" Value="Transparent" />
                                                        </Trigger>
                                                        <Trigger Property="IsFocused" Value="True">
                                                            <Setter Property="Background" Value="Transparent" />
                                                            <Setter Property="BorderBrush" Value="Transparent" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </local:TimesheetTextBox>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                
                            </ItemsControl>
                            <TextBlock Grid.Column="2"
                                           Text="{Binding Total}" 
                                           TextAlignment="Center"
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Stretch" 
                                            FontSize="14" FontWeight="SemiBold" 
                                           Background="Transparent" Foreground="Gray"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <!--</ScrollViewer>-->
        </Grid>
        <!--</ScrollViewer>-->
        <Grid Grid.Row="4" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!--<Button Grid.Column="0" IsEnabled="{Binding CanPressButton}" Style="{StaticResource MaterialDesignRaisedButton}" Command="{Binding CopyPreviousCommand}" Background="LightGray" Foreground="Black" HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="ContentCopy" VerticalAlignment="Center" Margin="0 1 8 0" Width="11" Height="11"/>
                    <TextBlock Text="Copy from Previous"/>
                </StackPanel>
            </Button>-->

            <StackPanel Orientation="Horizontal" Grid.Column="2">
                <Button Width="100" IsEnabled="{Binding IsSubEditable}" Style="{StaticResource MaterialDesignRaisedButton}" Command="{Binding SaveTimesheetCommand}" 
                        Background="LightGray" Foreground="Black" HorizontalAlignment="Right"
                        IsHitTestVisible="{Binding ButtonInAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <Button.CommandParameter>
                        <s:Int32>0</s:Int32>
                    </Button.CommandParameter>
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="ContentSave" VerticalAlignment="Center" Margin="0 1 8 0" Width="11" Height="11"/>
                        <TextBlock Text="Save"/>
                    </StackPanel>
                </Button>

                <Button IsEnabled="{Binding IsSubEditable}" Width="100" Margin="20 0 0 0" Style="{StaticResource MaterialDesignRaisedButton}" Command="{Binding SubmitTimeSheetCommand}" 
                        Background="LightGray" Foreground="Black" HorizontalAlignment="Right"
                        IsHitTestVisible="{Binding ButtonInAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Upload" VerticalAlignment="Center" Margin="0 1 8 0" Width="11" Height="11"/>
                        <TextBlock Text="Submit"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>


    </Grid>
</UserControl>
