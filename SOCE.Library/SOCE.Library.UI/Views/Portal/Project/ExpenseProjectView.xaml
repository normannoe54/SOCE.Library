<UserControl x:Class="SOCE.Library.UI.Views.ExpenseProjectView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:SOCE.Library.UI"
             xmlns:views="clr-namespace:SOCE.Library.UI.Views"
             xmlns:component="clr-namespace:SOCE.Library.UI.Components"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             Background="Transparent" >
    <materialDesign:DrawerHost HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="620"
                               IsLeftDrawerOpen="{Binding LeftDrawerOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" LeftDrawerCloseOnClickAway="True">
        <materialDesign:DrawerHost.LeftDrawerContent >
            <ContentControl Content="{Binding LeftViewToShow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <!--<views:AddSubProjectView/>-->
        </materialDesign:DrawerHost.LeftDrawerContent>
        <Grid Margin="10 10 10 20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <VirtualizingStackPanel  Grid.Column="0" Orientation="Horizontal">
                    <TextBlock HorizontalAlignment ="Left" VerticalAlignment="Center" FontSize="24" FontWeight="SemiBold"  Text="{Binding BaseProject.ProjectName}"/>
                    <TextBlock HorizontalAlignment ="Left" VerticalAlignment="Center" FontSize="24" FontWeight="SemiBold" Margin="10 0 0 0" Text="{Binding BaseProject.ProjectNumber, StringFormat='[{0}]'}"/>
                    <VirtualizingStackPanel  Margin="30 0 0 0" Orientation="Horizontal">
                        <TextBlock HorizontalAlignment ="Left" VerticalAlignment="Center" FontSize="20" FontWeight="SemiBold" Text="PM:"/>
                        <TextBlock HorizontalAlignment ="Left" VerticalAlignment="Center" FontSize="20" FontWeight="SemiBold" Margin="10 0 0 0" Text="{Binding BaseProject.ProjectManager.FullName}"/>
                    </VirtualizingStackPanel>
                </VirtualizingStackPanel>
            </Grid>
            <TextBlock Grid.Row="1" HorizontalAlignment ="Left" VerticalAlignment="Center" FontSize="20" FontWeight="SemiBold" Text="EXPENSES" Margin="0 10 0 0"/>
            <Button Grid.Row="1" IsEnabled="{Binding IsActive}" Style="{StaticResource MaterialDesignFlatButton}" Foreground="Black"
                             Command="{Binding AddExpenseCommandCommand}" HorizontalAlignment="right" VerticalAlignment="Center" Margin="0 10 0 0" BorderThickness="1" BorderBrush="Black">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Margin="0 1 8 0" Width="11" Height="11"/>
                    <TextBlock Text="Add New Expense"/>
                </StackPanel>
            </Button>
            <Grid Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0 20 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" HorizontalAlignment="Stretch" Background="{StaticResource SOCELightGray}" Height="30">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="65"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="110"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="240"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Left"
                         Text="Employee" Margin="10 0 0 0"/>
                    <TextBlock Grid.Column="2" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="Date" Margin="5 0 0 0"/>
                    <TextBlock Grid.Column="3" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="Type" Margin="5 0 0 0"/>
                    <TextBlock Grid.Column="4" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="Description" Margin="10 0 0 0"/>
                    <TextBlock Grid.Column="5" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center"  Text="Cost" TextAlignment="Center" />
                    <TextBlock Grid.Column="6" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center"  Text="Invoiced" TextAlignment="Center" />
                    <TextBlock Grid.Column="7" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center"  Text="Reimbursable" TextAlignment="Center" />
                    <TextBlock Grid.Column="8" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center"  Text="Billable" TextAlignment="Center" />
                </Grid>
                <ListView Grid.Row="1" Margin="0 0 -20 0"
                    Background="Transparent" 
                        x:Name="listview"
                      
                          SelectionMode="Single"             
                          ItemsSource="{Binding Rowdata, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ListView.Resources>
                        <!--<local:CustomBoolToVisibilityConverter x:Key="BoolToVis" TrueValue="Visible" FalseValue="Hidden"/>
                <local:TableColorConverter x:Key="valueconverter"/>-->
                        <local:InvoicedColorConverter x:Key="valueconverter"/>
                    </ListView.Resources>

                    <ListView.Template>
                        <ControlTemplate>
                            <ScrollViewer CanContentScroll="True" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="Visible" Focusable="False">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </ControlTemplate>
                    </ListView.Template>

                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <!-- Set the Template for each row to a TextBlock and another ItemsControl -->
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Background="{Binding IsInvoiced, Converter={StaticResource valueconverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="65"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="110"/>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="240"/>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="80"/>
                                </Grid.ColumnDefinitions>

                                <VirtualizingStackPanel Grid.Column="0" Orientation="Horizontal" Margin="5 0 0 0" IsEnabled="{Binding IsCustom}">
                                    <Button HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Background="Transparent" BorderBrush="Transparent"  Foreground="Black" Height="20" Width="20"
                                            Command="{Binding Path=DataContext.DeleteExpenseCommand, RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" ToolTip="Delete">
                                        <Button.Content>
                                            <materialDesign:PackIcon Height="15" Width="15" Kind="TrashCan" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Button.Content>
                                    </Button>
                                    <ToggleButton Style="{StaticResource MaterialDesignActionToggleButton}" Background="Transparent" Foreground="Black" Height="20" Width="20" 
                                                      IsChecked="{Binding EditFieldState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ToggleButton.Content>
                                            <materialDesign:PackIcon Height="15" Width="15" Kind="ContentSave" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="Save"/>
                                        </ToggleButton.Content>
                                        <materialDesign:ToggleButtonAssist.OnContent>
                                            <materialDesign:PackIcon Kind="Lock" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </materialDesign:ToggleButtonAssist.OnContent>
                                    </ToggleButton>
                                </VirtualizingStackPanel>

                                <TextBox Grid.Column="1" FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                 Text="{Binding EmployeeExp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10 0 0 0" IsReadOnly="True"/>

                                <!--<TextBox Grid.Column="2" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                 Text="{Binding DateExp, StringFormat=d, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10 0 0 0" IsReadOnly="True"/>-->

                                <DatePicker Grid.Column="2" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                 Text="{Binding DateExp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10 0 0 0" 
                                        IsEnabled="{Binding EditFieldState, Converter={StaticResource InvertBooleanConverter}}"/>

                                <ComboBox Grid.Column="3" Margin="10 0 0 0" FontSize="12"
                                  IsEnabled="{Binding EditFieldState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InvertBooleanConverter}}"
                                  ItemsSource="{Binding Source={local:EnumerationExtension {x:Type local:ExpenseEnum}}}" 
                                  DisplayMemberPath="Description" 
                                  SelectedValue="{Binding TypeExpense}"  
                                  SelectedValuePath="Value"/>

                                <!--<TextBox Grid.Column="3" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                 Text="{Binding TypeExpense, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10 0 0 0" IsReadOnly="{Binding EditFieldState}"/>-->

                                <TextBox Grid.Column="4" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                 Text="{Binding DescriptionExp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5 0 0 0" IsReadOnly="{Binding EditFieldState}"/>

                                <Grid Grid.Column="5" Margin="10 0 0 0" HorizontalAlignment="Stretch" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBox Grid.Column="0" Width="60" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Center"
                                         Text="{Binding Rate, StringFormat='{}{0:#,0.##}', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         materialDesign:TextFieldAssist.PrefixText="$" materialDesign:TextFieldAssist.SuffixText="/mi." IsReadOnly="{Binding EditFieldState}"
                                         Visibility="{Binding MileageVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                    <TextBox Grid.Column="1" Width="60" Margin="10 0 10 0" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Center"
                                         Text="{Binding MileageExp, StringFormat='N2', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" materialDesign:TextFieldAssist.SuffixText="/mi." IsReadOnly="{Binding EditFieldState}"
                                         Visibility="{Binding MileageVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                    <TextBox Grid.Column="2" FontSize="12" TextAlignment="Left" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                         Text="{Binding TotalCostExp, StringFormat='N2', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  materialDesign:TextFieldAssist.PrefixText="$"
                                         IsReadOnly="{Binding MileageVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         IsEnabled="{Binding EditFieldState, Converter={StaticResource InvertBooleanConverter}}"/>
                                </Grid>

                                <CheckBox Grid.Column="6" IsHitTestVisible="False"
                                      Style="{StaticResource MaterialDesignCheckBox}" IsChecked="{Binding IsInvoiced, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      HorizontalAlignment="Center" Background="DarkGray" />

                                <CheckBox Grid.Column="7" IsHitTestVisible="{Binding EditFieldState, Converter={StaticResource InvertBooleanConverter}}"
                                      Style="{StaticResource MaterialDesignCheckBox}" IsChecked="{Binding IsReimbursable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      HorizontalAlignment="Center" Background="DarkGray" />

                                <CheckBox Grid.Column="8" IsHitTestVisible="{Binding EditFieldState, Converter={StaticResource InvertBooleanConverter}}"
                                      Style="{StaticResource MaterialDesignCheckBox}" IsChecked="{Binding IsClientBillable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      HorizontalAlignment="Center" Background="DarkGray" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Grid Grid.Row="3" Height="30" HorizontalAlignment="Stretch" Background="#F5F7CD">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="65"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="110"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="240"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Left"
                         Text="Invoiced Totals" Margin="10 0 0 0"/>
                    <TextBlock Grid.Column="5" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Left"
                         Text="{Binding InvTotalTotal, StringFormat='{}{0:C}', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2 0 0 0"/>
                </Grid>
                <Grid Grid.Row="2" Height="30" HorizontalAlignment="Stretch" Background="{StaticResource SOCELightGray}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="65"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="110"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="240"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Left"
                         Text="Overall Totals" Margin="10 0 0 0"/>
                    <TextBlock Grid.Column="5" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Left"
                         Text="{Binding TotalTotal, StringFormat='{}{0:C}', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2 0 0 0"/>
                </Grid>
                <Grid Grid.Row="4" Height="30" HorizontalAlignment="Stretch" Background="#EACFFA">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="65"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="110"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="240"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1" FontSize="12" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Left"
                         Text="Pending Expenses" Margin="10 0 0 0"/>
                    <TextBlock Grid.Column="5" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Left"
                         Text="{Binding PenTotalTotal, StringFormat='{}{0:C}', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2 0 0 0"/>
                </Grid>
            </Grid>
        </Grid>
    </materialDesign:DrawerHost>
</UserControl>
