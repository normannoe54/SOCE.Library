<UserControl x:Class="SOCE.Library.UI.Views.AddServiceManagerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:SOCE.Library.UI"
             xmlns:views="clr-namespace:SOCE.Library.UI.Views"
             xmlns:component="clr-namespace:SOCE.Library.UI.Components"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             Background="Transparent">
    <materialDesign:DrawerHost HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsLeftDrawerOpen="{Binding LeftDrawerOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" LeftDrawerCloseOnClickAway="True">
        <materialDesign:DrawerHost.LeftDrawerContent >
            <ContentControl Content="{Binding LeftViewToShow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

        </materialDesign:DrawerHost.LeftDrawerContent>
        <Grid Margin="10 10 10 20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="320"/>
            </Grid.RowDefinitions>

            <!--<Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="380"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="230"/>
            </Grid.ColumnDefinitions>-->
            <Grid Grid.Row="0" Height="300">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <VirtualizingStackPanel  Grid.Column="0" Margin="10 0 0 0" Orientation="Horizontal">
                        <TextBlock HorizontalAlignment ="Left" VerticalAlignment="Center" FontSize="24" FontWeight="SemiBold"  Text="{Binding BaseProject.ProjectName}"/>
                        <TextBlock HorizontalAlignment ="Left" VerticalAlignment="Center" FontSize="24" FontWeight="SemiBold" Margin="10 0 0 0" Text="{Binding BaseProject.ProjectNumber, StringFormat='[{0}]'}"/>
                        <VirtualizingStackPanel  Margin="30 0 0 0" Orientation="Horizontal">
                            <TextBlock HorizontalAlignment ="Left" VerticalAlignment="Center" FontSize="20" FontWeight="SemiBold" Text="PM:"/>
                            <TextBlock HorizontalAlignment ="Left" VerticalAlignment="Center" FontSize="20" FontWeight="SemiBold" Margin="10 0 0 0" Text="{Binding BaseProject.ProjectManager.FullName}"/>
                        </VirtualizingStackPanel>
                    </VirtualizingStackPanel>
                </Grid>
                <Grid Margin="10 0 0 0" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" HorizontalAlignment ="Left" VerticalAlignment="Center" FontSize="20" FontWeight="SemiBold" Text="ADD-SERVICE" />

                    <Button Grid.Column="1" Margin="10 0 0 0" IsEnabled="{Binding BaseProject.IsActive}"
                                                    Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" 
                                                    Foreground="Black" Background="Transparent" 
                                                    BorderBrush="Transparent"
                                                    IsHitTestVisible="{Binding ButtonInAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    Command="{Binding AddSubCommand}"
                                                    CommandParameter="{Binding}"
                                                    ToolTip="Add Add-Service"
                            HorizontalAlignment="Center">

                        <materialDesign:PackIcon Kind="Plus" VerticalAlignment="Center" Padding="0"/>
                    </Button>

                    <Button Grid.Column="2" Margin="10 0 0 0" IsEnabled="{Binding BaseProject.IsActive}"
                                                    Background="Transparent"
                                                    BorderBrush="Transparent"
                                                    Command="{Binding ImortalizeCommand}"
                                                    HorizontalAlignment="Center"
                                                    ToolTip="Create Add-Service Log"
                            IsHitTestVisible="{Binding ButtonInAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFloatingActionMiniLightButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AddServiceLogStatus}" Value="Missing">
                                        <Setter Property="Foreground" Value="{StaticResource SOCERed}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AddServiceLogStatus}" Value="Complete">
                                        <Setter Property="Foreground" Value="{StaticResource SOCEGreenCompliment}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AddServiceLogStatus}" Value="Incomplete">
                                        <Setter Property="Foreground" Value="{StaticResource SOCEOrangeCompliment}"/>
                                    </DataTrigger>
                                    <!-- etc -->
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <materialDesign:PackIcon Kind="DownloadBox" VerticalAlignment="Center" Padding="0" Height="30" Width="30"/>
                    </Button>
                    <Border Grid.Column="3" Margin="15 0 70 0" VerticalAlignment="Center" HorizontalAlignment="Right" CornerRadius="3" BorderThickness="2" Padding="5 0 5 0">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AddServiceLogStatus}" Value="Missing">
                                        <Setter Property="BorderBrush" Value="{StaticResource SOCERed}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AddServiceLogStatus}" Value="Complete">
                                        <Setter Property="BorderBrush" Value="{StaticResource SOCEGreenCompliment}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AddServiceLogStatus}" Value="Incomplete">
                                        <Setter Property="BorderBrush" Value="{StaticResource SOCEOrangeCompliment}"/>
                                    </DataTrigger>
                                    <!-- etc -->
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <TextBlock  FontSize="16" FontWeight="DemiBold" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AddServiceLogStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="Missing">
                                            <Setter Property="Text" Value="Missing Log" />
                                            <Setter Property="Foreground" Value="{StaticResource SOCERed}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding AddServiceLogStatus}" Value="Complete">
                                            <Setter Property="Text" Value="Complete Log" />
                                            <Setter Property="Foreground" Value="{StaticResource SOCEGreenCompliment}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding AddServiceLogStatus}" Value="Incomplete">
                                            <Setter Property="Text" Value="Incomplete Log" />
                                            <Setter Property="Foreground" Value="{StaticResource SOCEOrangeCompliment}"/>
                                        </DataTrigger>
                                        <!-- etc -->
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Border>
                </Grid>

                <Grid Grid.Row="2" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="110"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="85"/>
                        <ColumnDefinition Width="85"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Point Number" />
                    <TextBlock Grid.Column="2" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Left" Margin="15 0 0 0" VerticalAlignment="Center" Text="Description" />
                    <TextBlock Grid.Column="3" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Fee" TextAlignment="Center"/>
                    <TextBlock Grid.Column="4" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Date Published" TextAlignment="Center"/>
                    <TextBlock Grid.Column="5" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Date Sent" TextAlignment="Center" />
                    <TextBlock Grid.Column="6" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center" Text="Date Invoiced" TextAlignment="Center" />
                    <TextBlock Grid.Column="7" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="Billable?"/>
                    <TextBlock Grid.Column="8" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center"  Text="Hourly?"/>
                </Grid>

                <ItemsControl ItemsSource="{Binding SubProjects, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ItemsControl.Resources>
                        <local:InvoicedColorConverter x:Key="valueconverter"/>
                    </ItemsControl.Resources>

                    <ItemsControl.Template>
                        <ControlTemplate>
                            <ScrollViewer CanContentScroll="True" Padding="{TemplateBinding Padding}" Focusable="False">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" BorderBrush="LightGray" BorderThickness="0 0.5 0 0.5"  Background="{Binding IsInvoiced, Converter={StaticResource valueconverter}}" 
                                    IsEnabled="{Binding Path=DataContext.BaseProject.IsActive, RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                <Grid Margin="0 5 0 5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="110"/>
                                        <ColumnDefinition Width="150"/>
                                        <ColumnDefinition Width="150"/>
                                        <ColumnDefinition Width="150"/>
                                        <ColumnDefinition Width="85"/>
                                        <ColumnDefinition Width="85"/>
                                    </Grid.ColumnDefinitions>

                                    <VirtualizingStackPanel Grid.Column="0" Orientation="Horizontal" Margin="15 0 0 0" IsEnabled="{Binding Path=DataContext.CanEditPhase, RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                        <Button HorizontalAlignment="Left" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Background="Transparent" BorderBrush="Transparent"  Foreground="Black" Height="20" Width="20" IsEnabled="{Binding CanDelete}"
                                            Command="{Binding Path=DataContext.DeleteSubProject, RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" 
                                                IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Delete">
                                            <Button.Content>
                                                <materialDesign:PackIcon Height="15" Width="15" Kind="TrashCan" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            </Button.Content>
                                        </Button>
                                        <ToggleButton Margin="5 0 0 0" Style="{StaticResource MaterialDesignActionToggleButton}" Background="Transparent" Foreground="Black" Height="20" Width="20" IsChecked="{Binding EditSubFieldState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <ToggleButton.Content>
                                                <materialDesign:PackIcon Height="15" Width="15" Kind="ContentSave" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="Save"/>
                                            </ToggleButton.Content>
                                            <materialDesign:ToggleButtonAssist.OnContent>
                                                <materialDesign:PackIcon Kind="Lock" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            </materialDesign:ToggleButtonAssist.OnContent>
                                        </ToggleButton>
                                        <TextBlock Text="*" FontWeight="Bold" VerticalAlignment="Top">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding LogStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="Missing">
                                                            <Setter Property="materialDesign:HintAssist.Hint" Value="Missing Log"/>
                                                            <Setter Property="Foreground" Value="{StaticResource SOCERed}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding LogStatus}" Value="Complete">
                                                            <Setter Property="materialDesign:HintAssist.Hint" Value="Complete Log"/>
                                                            <Setter Property="Foreground" Value="{StaticResource SOCEGreenCompliment}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding LogStatus}" Value="Incomplete">
                                                            <Setter Property="materialDesign:HintAssist.Hint" Value="Incomplete Log"/>
                                                            <Setter Property="Foreground" Value="{StaticResource SOCEOrangeCompliment}"/>
                                                        </DataTrigger>
                                                        <!-- etc -->
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </VirtualizingStackPanel>

                                    <TextBox Grid.Column="1" IsReadOnly="{Binding EditSubFieldState}" FontSize="12" FontWeight="SemiBold" HorizontalAlignment="Center" 
                                             VerticalAlignment="Center" TextAlignment="Center" Text="{Binding PointNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                             Margin="0 0 10 0"  materialDesign:TextFieldAssist.PrefixText="[" materialDesign:TextFieldAssist.SuffixText="]" 
                                             IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBox Grid.Column="2" IsReadOnly="{Binding EditSubFieldState}" FontWeight="Regular" FontSize="12" HorizontalAlignment="Stretch" 
                                             TextAlignment="Left" VerticalAlignment="Center" Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="20 0 0 0"
                                             IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBox Grid.Column="3" IsReadOnly="{Binding EditSubFieldState}" FontWeight="Regular" FontSize="12" Margin="25 0 0 0"  HorizontalAlignment="Stretch" 
                                             TextAlignment="Left" VerticalAlignment="Center" Text="{Binding Fee, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:#,0.##}'}" 
                                             IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" materialDesign:TextFieldAssist.PrefixText="$"
                                             Visibility="{Binding IsHourly, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBoolToVisConverter}}"/>
                                    <!--<StackPanel Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal"
                                                Visibility="{Binding IsHourly, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TextBlock  FontWeight="Bold" FontSize="8" VerticalAlignment="Top" Text="H" />
                                        <TextBox Margin="2 0 0 0" IsReadOnly="{Binding EditSubFieldState}" FontWeight="Regular" FontSize="12"
                                                 HorizontalAlignment="Center" VerticalAlignment="Center"
                                                 Text="{Binding Fee, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:#,0.##}'}"
                                                 materialDesign:TextFieldAssist.PrefixText="$"/>
                                    </StackPanel>-->
                                    <StackPanel Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Orientation="Horizontal"  Margin="25 0 0 0" 
                                                Visibility="{Binding IsHourly, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TextBlock  FontWeight="Bold" FontSize="8" VerticalAlignment="Top" Text="H" />
                                        <TextBlock  Margin="3 0 0 0" FontWeight="Regular" FontSize="12" FontStyle="Italic" VerticalAlignment="Center" 
                                             Text="{Binding Fee, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='(${0:#,0.##})'}"/>
                                    </StackPanel>

                                    <DatePicker Grid.Column="4"  IsEnabled="{Binding EditSubFieldState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InvertBooleanConverter}}" 
                                            FontWeight="Regular" FontSize="14" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="25 0 0 0"
                                            SelectedDate="{Binding Path=DateInitiated,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                            IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <DatePicker Grid.Column="5"  IsEnabled="{Binding EditSubFieldState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InvertBooleanConverter}}" 
                                            FontWeight="Regular" FontSize="14" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="25 0 0 0"
                                            SelectedDate="{Binding Path=DateSent,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                            IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <DatePicker Grid.Column="6"  IsEnabled="False" 
                                            FontWeight="Regular" FontSize="14" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="25 0 0 0"
                                            SelectedDate="{Binding Path=DateInvoiced,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                    <CheckBox Grid.Column="7" IsEnabled="{Binding EditSubFieldState,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InvertBooleanConverter}}" 
                                              Style="{StaticResource MaterialDesignCheckBox}" IsChecked="{Binding IsBillable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="25 0 0 0"
                                              HorizontalAlignment="Center" Background="DarkGray" IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <CheckBox Grid.Column="8" IsEnabled="{Binding EditSubFieldState,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InvertBooleanConverter}}" 
                                              Style="{StaticResource MaterialDesignCheckBox}" IsChecked="{Binding IsHourly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="25 0 0 0"
                                              HorizontalAlignment="Center" Background="DarkGray" IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <!--</Grid>-->
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <materialDesign:Card Grid.Column="0" Margin="10" Padding="5"
                                     VerticalAlignment="Stretch"
                                              materialDesign:ColorZoneAssist.Mode="Custom"
                                              materialDesign:ColorZoneAssist.Background="#525252"
                                              materialDesign:ColorZoneAssist.Foreground="White">


                    <!--<GroupBox.HeaderTemplate>
                    <DataTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="RateReview" Height="32" Width="32" VerticalAlignment="Center" />
                            <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" FontSize="16" FontWeight="SemiBold" 
                                       Text="{Binding Path=DataContext.BaseProject.BaseProject, RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                            <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" FontSize="16" FontWeight="SemiBold" Text="PHASE FORECAST SUMMARY" />
                            <ComboBox Margin="30 0 0 0" Width="250" VerticalAlignment="Center" HorizontalAlignment="Stretch" Foreground="Black"
                                      Background="White"
                                      Style="{StaticResource MaterialDesignComboBox}"
                                      FontSize="14"
                                      IsTextSearchEnabled="True" IsEditable="False" StaysOpenOnEdit="True"
                                      materialDesign:HintAssist.Hint="   Select Phase"   
                                      SelectedItem="{Binding Path = DataContext.SelectedProjectPhase, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ItemsSource="{Binding Path = DataContext.SubProjects, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      TextSearch.TextPath="Description"
                                      DisplayMemberPath="Description"   
                                      MaxDropDownHeight="250">
                            </ComboBox>
                        </VirtualizingStackPanel>
                    </DataTemplate>
                </GroupBox.HeaderTemplate>-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="40"/>
                        </Grid.RowDefinitions>

                        <!--<Button Grid.Row="0" HorizontalAlignment="Right" Background="Transparent" BorderBrush="Transparent" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Foreground="Black"
                                            Command="{Binding CheckHoursCommand, RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" ToolTip="Show Hours" >
                            <Button.Content>
                                <Border CornerRadius="3" Background="Transparent" Padding="0">
                                    <materialDesign:PackIcon  Kind="ChartLine" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="28" Width="28"/>
                                </Border>
                            </Button.Content>
                        </Button>-->
                        <Grid Grid.Row="0">
                            <TextBlock Grid.Column="0" HorizontalAlignment ="Center" VerticalAlignment="Center" FontSize="20" FontWeight="SemiBold" Text="ADD-SERVICE PROPOSAL REQUEST" />
                            <!--<TextBlock Margin="8,0,0,0" VerticalAlignment="Center" FontSize="16" FontWeight="SemiBold" Text="PHASE FORECAST SUMMARY" />-->
                            <ComboBox Margin="10 0 0 0" Width="300" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="Black"
                                      Background="Transparent"
                                      Style="{StaticResource MaterialDesignComboBox}"
                                      FontSize="16"
                                    FontWeight="SemiBold"
                                      IsTextSearchEnabled="True" IsEditable="False" StaysOpenOnEdit="True"
                                      materialDesign:HintAssist.Hint="   Select Add-Service"   
                                      SelectedItem="{Binding SelectedAddService, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ItemsSource="{Binding SubProjects, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      TextSearch.TextPath="PointNumber"
                                      DisplayMemberPath="PointNumber"   
                                      MaxDropDownHeight="250">
                            </ComboBox>

                            <VirtualizingStackPanel HorizontalAlignment="Right" Grid.Column="1" Orientation="Horizontal" Margin="0 0 10 0">
                                <TextBlock HorizontalAlignment ="Left" VerticalAlignment="Center" FontSize="20" FontWeight="SemiBold" Text="Edit Mode"/>
                                <ToggleButton Style="{StaticResource MaterialDesignActionToggleButton}"  Background="Transparent" Foreground="Black" Height="40" Width="40" 
                                      IsEnabled="{Binding BaseProject.IsActive}" IsChecked="{Binding SelectedAddService.EditSubFieldState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10 0 0 0">
                                    <ToggleButton.Content>
                                        <materialDesign:PackIcon Height="30" Width="30" Kind="ContentSave" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="Save"/>
                                    </ToggleButton.Content>
                                    <materialDesign:ToggleButtonAssist.OnContent>
                                        <materialDesign:PackIcon Kind="Lock" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </materialDesign:ToggleButtonAssist.OnContent>
                                </ToggleButton>
                            </VirtualizingStackPanel>
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="310"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="250"/>
                                <ColumnDefinition Width="250"/>
                            </Grid.ColumnDefinitions>
                            <Grid  Margin="10 0 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="0 0 0 6" Text="Architect:"  HorizontalAlignment="Left" FontSize="14" FontWeight="SemiBold" VerticalAlignment="Bottom"/>
                                <TextBox Grid.Column="1" Margin="10 0 0 0" IsReadOnly="{Binding SelectedAddService.EditSubFieldState}" FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center" Text="{Binding SelectedAddService.ClientCompanyName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Architect"/>
                            </Grid>
                            <Grid  Margin="10 0 0 0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="0 0 0 6" Text="Address:"  HorizontalAlignment="Left" FontSize="14" FontWeight="SemiBold" VerticalAlignment="Bottom"/>
                                <TextBox Grid.Column="1" Margin="10 0 0 0" IsReadOnly="{Binding SelectedAddService.EditSubFieldState}" FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center" materialDesign:HintAssist.Hint="Address" Text="{Binding SelectedAddService.ClientAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBox Grid.Column="2" Margin="10 0 0 0" IsReadOnly="{Binding SelectedAddService.EditSubFieldState}" FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center" materialDesign:HintAssist.Hint="City" Text="{Binding SelectedAddService.ClientCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                            <Grid  Margin="10 0 10 0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="0 0 0 6" Text="Attention:"  HorizontalAlignment="Left" FontSize="14" FontWeight="SemiBold" VerticalAlignment="Bottom"/>
                                <TextBox Grid.Column="1" Margin="10 0 0 0" IsReadOnly="{Binding SelectedAddService.EditSubFieldState}" FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center" materialDesign:HintAssist.Hint="Client Name"
                                         Text="{Binding SelectedAddService.NameOfClient, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>

                            <Grid  Margin="10 0 10 0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="0 0 0 6" Text="Date:"  HorizontalAlignment="Left" FontSize="14" FontWeight="SemiBold" VerticalAlignment="Bottom"/>
                                <DatePicker Grid.Column="5"  IsEnabled="{Binding SelectedAddService.EditSubFieldState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InvertBooleanConverter}}" 
                                            FontWeight="Regular" FontSize="14" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10 0 10 0"
                                            SelectedDate="{Binding Path=SelectedAddService.DateSent, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                            IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </Grid>
                        <Grid  Margin="10 0 10 0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="0 0 0 6" Text="Description / Summary:"  HorizontalAlignment="Left" FontSize="14" FontWeight="SemiBold" VerticalAlignment="Bottom"/>
                            <TextBox Grid.Column="1" Margin="10 0 0 0" IsReadOnly="{Binding SelectedAddService.EditSubFieldState}" FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center" materialDesign:HintAssist.Hint="Description"
                                     IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Text="{Binding SelectedAddService.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                        <TextBox Margin="10 20 10 20" VerticalAlignment="Stretch" Grid.Row="3" Style="{StaticResource MaterialDesignOutlinedTextBox}" AcceptsReturn="True" TextWrapping="Wrap"  IsReadOnly="{Binding SelectedAddService.EditSubFieldState}" FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Stretch"
                                          Text="{Binding SelectedAddService.ExpandedDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Scope of Work"
                                 IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Grid Grid.Row="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="350"/>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid  Margin="10 0 0 10" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="0 0 0 6" Text="Additional Fee:"  HorizontalAlignment="Left" FontSize="14" FontWeight="SemiBold" VerticalAlignment="Bottom"/>

                                <Grid Grid.Column="1" Margin="10 0 0 0" HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="5 0 0 0" FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="Hourly" 
                                               Visibility="{Binding SelectedAddService.FeeBaseVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <TextBlock Grid.Column="1" Margin="4 0 0 0" FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="Not to Exceed" 
                                               Visibility="{Binding SelectedAddService.FeeandHourlyBaseVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <TextBox Grid.Column="2" Margin="5 0 0 0" IsReadOnly="{Binding SelectedAddService.EditSubFieldState}" FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Stretch" 
                                             Visibility="{Binding SelectedAddService.FeeOnlyVis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                         VerticalAlignment="Center" Text="{Binding SelectedAddService.Fee, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:#,0.##}'}"
                                             IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" materialDesign:TextFieldAssist.PrefixText="$" materialDesign:HintAssist.Hint="Fee"/>

                                </Grid>
                                
                            </Grid>
                            <Grid  Margin="10 0 0 10" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="0 0 0 6" Text="To:"  HorizontalAlignment="Left" FontSize="14" FontWeight="SemiBold" VerticalAlignment="Bottom"/>
                                <TextBox Grid.Column="1" Margin="10 0 0 0" IsReadOnly="{Binding SelectedAddService.EditSubFieldState}" FontSize="14" FontWeight="SemiBold" HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center" IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         Text="{Binding SelectedAddService.PersonAddressed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Client"/>
                            </Grid>
                            <Grid  Margin="10 0 0 10" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="0 0 0 6" Grid.Column="0" Text="From:"  HorizontalAlignment="Left" FontSize="14" FontWeight="SemiBold" VerticalAlignment="Bottom"/>
                                <ComboBox  Margin="10 0 0 0" FontSize="14" Grid.Column="1"
                                              IsEnabled="{Binding SelectedAddService.EditSubFieldState, Converter={StaticResource InvertBooleanConverter}}"
                                              ItemsSource="{Binding Path=DataContext.ProjectManagers, RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                              DisplayMemberPath="FullName" 
                                              MaxDropDownHeight="200"
                                              SelectedItem="{Binding SelectedAddService.SelectedEmployee, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           IsHitTestVisible="{Binding IsInvoicedEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                               
                            </Grid>
                            <Image Grid.Column="3" Margin="10 0 0 10" Source="{Binding SelectedAddService.SelectedEmployee.SignatureOfPM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Stretch"/>

                        </Grid>


                    </Grid>

                </materialDesign:Card>
            </Grid>
        </Grid>
    </materialDesign:DrawerHost>
</UserControl>
